// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AzureDevopsInitParameters struct {

	// (String) The ID of this resource.
	// ID of the Azure Devops integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the Azure DevOps project
	// The name of the Azure DevOps project
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type AzureDevopsObservation struct {

	// (String) The ID of this resource.
	// ID of the Azure Devops integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Indicates whether this is the default Azure DevOps integration
	// Indicates whether this is the default Azure DevOps integration
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// (String) The name of the Azure DevOps project
	// The name of the Azure DevOps project
	Project *string `json:"project,omitempty" tf:"project,omitempty"`
}

type AzureDevopsParameters struct {

	// (String) The ID of this resource.
	// ID of the Azure Devops integration. If not specified, the default integration will be used.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The name of the Azure DevOps project
	// The name of the Azure DevOps project
	// +kubebuilder:validation:Optional
	Project *string `json:"project" tf:"project,omitempty"`
}

type BitbucketCloudInitParameters struct {

	// (String) The ID of this resource.
	// The ID of the Bitbucket Cloud integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The Bitbucket project containing the repository
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type BitbucketCloudObservation struct {

	// (String) The ID of this resource.
	// The ID of the Bitbucket Cloud integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Indicates whether this is the default Azure DevOps integration
	// Indicates whether this is the default Bitbucket Cloud integration
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The Bitbucket project containing the repository
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type BitbucketCloudParameters struct {

	// (String) The ID of this resource.
	// The ID of the Bitbucket Cloud integration. If not specified, the default integration will be used.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The Bitbucket project containing the repository
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace" tf:"namespace,omitempty"`
}

type BitbucketDatacenterInitParameters struct {

	// (String) The ID of this resource.
	// The ID of the Bitbucket Datacenter integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The Bitbucket project containing the repository
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type BitbucketDatacenterObservation struct {

	// (String) The ID of this resource.
	// The ID of the Bitbucket Datacenter integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Indicates whether this is the default Azure DevOps integration
	// Indicates whether this is the default Bitbucket Datacenter integration
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The Bitbucket project containing the repository
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type BitbucketDatacenterParameters struct {

	// (String) The ID of this resource.
	// The ID of the Bitbucket Datacenter integration. If not specified, the default integration will be used.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The Bitbucket project containing the repository
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace" tf:"namespace,omitempty"`
}

type GithubEnterpriseInitParameters struct {

	// (String) The ID of this resource.
	// The ID of the GitHub Enterprise integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The GitHub organization / user the repository belongs to
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type GithubEnterpriseObservation struct {

	// (String) The ID of this resource.
	// The ID of the GitHub Enterprise integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Indicates whether this is the default Azure DevOps integration
	// Indicates whether this is the default GitHub Enterprise integration
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The GitHub organization / user the repository belongs to
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type GithubEnterpriseParameters struct {

	// (String) The ID of this resource.
	// The ID of the GitHub Enterprise integration. If not specified, the default integration will be used.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The GitHub organization / user the repository belongs to
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace" tf:"namespace,omitempty"`
}

type GitlabInitParameters struct {

	// (String) The ID of this resource.
	// ID of the Gitlab integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The GitLab namespace containing the repository
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type GitlabObservation struct {

	// (String) The ID of this resource.
	// ID of the Gitlab integration. If not specified, the default integration will be used.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Boolean) Indicates whether this is the default Azure DevOps integration
	// Indicates whether this is the default GitLab integration
	IsDefault *bool `json:"isDefault,omitempty" tf:"is_default,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The GitLab namespace containing the repository
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`
}

type GitlabParameters struct {

	// (String) The ID of this resource.
	// ID of the Gitlab integration. If not specified, the default integration will be used.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (String) The Bitbucket project containing the repository
	// The GitLab namespace containing the repository
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace" tf:"namespace,omitempty"`
}

type ModuleInitParameters struct {

	// (Boolean) Indicates whether this module can manage others. Defaults to false.
	// Indicates whether this module can manage others. Defaults to `false`.
	Administrative *bool `json:"administrative,omitempty" tf:"administrative,omitempty"`

	// (Block List, Max: 1) Azure DevOps VCS settings (see below for nested schema)
	// Azure DevOps VCS settings
	AzureDevops []AzureDevopsInitParameters `json:"azureDevops,omitempty" tf:"azure_devops,omitempty"`

	// (Block List, Max: 1) Bitbucket Cloud VCS settings (see below for nested schema)
	// Bitbucket Cloud VCS settings
	BitbucketCloud []BitbucketCloudInitParameters `json:"bitbucketCloud,omitempty" tf:"bitbucket_cloud,omitempty"`

	// (Block List, Max: 1) Bitbucket Datacenter VCS settings (see below for nested schema)
	// Bitbucket Datacenter VCS settings
	BitbucketDatacenter []BitbucketDatacenterInitParameters `json:"bitbucketDatacenter,omitempty" tf:"bitbucket_datacenter,omitempty"`

	// (String) GitHub branch to apply changes to
	// GitHub branch to apply changes to
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// form module description for users
	// Free-form module description for users
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Indicates whether local preview versions can be triggered on this Module. Defaults to false.
	// Indicates whether local preview versions can be triggered on this Module. Defaults to `false`.
	EnableLocalPreview *bool `json:"enableLocalPreview,omitempty" tf:"enable_local_preview,omitempty"`

	// hosted) VCS settings (see below for nested schema)
	// GitHub Enterprise (self-hosted) VCS settings
	GithubEnterprise []GithubEnterpriseInitParameters `json:"githubEnterprise,omitempty" tf:"github_enterprise,omitempty"`

	// (Block List, Max: 1) GitLab VCS settings (see below for nested schema)
	// GitLab VCS settings
	Gitlab []GitlabInitParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// (Set of String)
	// +listType=set
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// provider-name naming convention. However, if the repository doesn't follow this convention, or you want to give it a custom name, you can provide it here. However, if the repository doesn't follow this convention, or you want to give it a custom name, you can provide it here.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Project root is the optional directory relative to the repository root containing the module source code.
	// Project root is the optional directory relative to the repository root containing the module source code.
	ProjectRoot *string `json:"projectRoot,omitempty" tf:"project_root,omitempty"`

	// (Boolean) Protect this module from accidental deletion. If set, attempts to delete this module will fail. Defaults to false.
	// Protect this module from accidental deletion. If set, attempts to delete this module will fail. Defaults to `false`.
	ProtectFromDeletion *bool `json:"protectFromDeletion,omitempty" tf:"protect_from_deletion,omitempty"`

	// (Boolean) Make this module publicly accessible. Can only be set at creation time. Defaults to false.
	// Make this module publicly accessible. Can only be set at creation time. Defaults to `false`.
	Public *bool `json:"public,omitempty" tf:"public,omitempty"`

	// way VCS integration using a raw Git repository link (see below for nested schema)
	// One-way VCS integration using a raw Git repository link
	RawGit []RawGitInitParameters `json:"rawGit,omitempty" tf:"raw_git,omitempty"`

	// (String) Name of the repository, without the owner part
	// Name of the repository, without the owner part
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// (Set of String) List of the accounts (subdomains) which should have access to the Module
	// List of the accounts (subdomains) which should have access to the Module
	// +listType=set
	SharedAccounts []*string `json:"sharedAccounts,omitempty" tf:"shared_accounts,omitempty"`

	// (String) ID (slug) of the space the module is in
	// ID (slug) of the space the module is in
	// +crossplane:generate:reference:type=github.com/aksel-allas-org/provider-spacelift/apis/space/v1alpha1.Space
	SpaceID *string `json:"spaceId,omitempty" tf:"space_id,omitempty"`

	// Reference to a Space in space to populate spaceId.
	// +kubebuilder:validation:Optional
	SpaceIDRef *v1.Reference `json:"spaceIdRef,omitempty" tf:"-"`

	// Selector for a Space in space to populate spaceId.
	// +kubebuilder:validation:Optional
	SpaceIDSelector *v1.Selector `json:"spaceIdSelector,omitempty" tf:"-"`

	// provider-name naming convention. However, if the repository doesn't follow this convention, or you gave the module a custom name, you can provide the provider name here. However, if the repository doesn't follow this convention, or you gave the module a custom name, you can provide the provider name here.
	TerraformProvider *string `json:"terraformProvider,omitempty" tf:"terraform_provider,omitempty"`

	// hosted instance of Spacelift.
	// ID of the worker pool to use. NOTE: worker_pool_id is required when using a self-hosted instance of Spacelift.
	WorkerPoolID *string `json:"workerPoolId,omitempty" tf:"worker_pool_id,omitempty"`

	// (String) Defines the tool that will be used to execute the workflow.
	// Defines the tool that will be used to execute the workflow.
	WorkflowTool *string `json:"workflowTool,omitempty" tf:"workflow_tool,omitempty"`
}

type ModuleObservation struct {

	// (Boolean) Indicates whether this module can manage others. Defaults to false.
	// Indicates whether this module can manage others. Defaults to `false`.
	Administrative *bool `json:"administrative,omitempty" tf:"administrative,omitempty"`

	// (String) AWS IAM assume role policy statement setting up trust relationship
	// AWS IAM assume role policy statement setting up trust relationship
	AwsAssumeRolePolicyStatement *string `json:"awsAssumeRolePolicyStatement,omitempty" tf:"aws_assume_role_policy_statement,omitempty"`

	// (Block List, Max: 1) Azure DevOps VCS settings (see below for nested schema)
	// Azure DevOps VCS settings
	AzureDevops []AzureDevopsObservation `json:"azureDevops,omitempty" tf:"azure_devops,omitempty"`

	// (Block List, Max: 1) Bitbucket Cloud VCS settings (see below for nested schema)
	// Bitbucket Cloud VCS settings
	BitbucketCloud []BitbucketCloudObservation `json:"bitbucketCloud,omitempty" tf:"bitbucket_cloud,omitempty"`

	// (Block List, Max: 1) Bitbucket Datacenter VCS settings (see below for nested schema)
	// Bitbucket Datacenter VCS settings
	BitbucketDatacenter []BitbucketDatacenterObservation `json:"bitbucketDatacenter,omitempty" tf:"bitbucket_datacenter,omitempty"`

	// (String) GitHub branch to apply changes to
	// GitHub branch to apply changes to
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// form module description for users
	// Free-form module description for users
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Indicates whether local preview versions can be triggered on this Module. Defaults to false.
	// Indicates whether local preview versions can be triggered on this Module. Defaults to `false`.
	EnableLocalPreview *bool `json:"enableLocalPreview,omitempty" tf:"enable_local_preview,omitempty"`

	// hosted) VCS settings (see below for nested schema)
	// GitHub Enterprise (self-hosted) VCS settings
	GithubEnterprise []GithubEnterpriseObservation `json:"githubEnterprise,omitempty" tf:"github_enterprise,omitempty"`

	// (Block List, Max: 1) GitLab VCS settings (see below for nested schema)
	// GitLab VCS settings
	Gitlab []GitlabObservation `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// (String) The ID of this resource.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// (Set of String)
	// +listType=set
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// provider-name naming convention. However, if the repository doesn't follow this convention, or you want to give it a custom name, you can provide it here. However, if the repository doesn't follow this convention, or you want to give it a custom name, you can provide it here.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Project root is the optional directory relative to the repository root containing the module source code.
	// Project root is the optional directory relative to the repository root containing the module source code.
	ProjectRoot *string `json:"projectRoot,omitempty" tf:"project_root,omitempty"`

	// (Boolean) Protect this module from accidental deletion. If set, attempts to delete this module will fail. Defaults to false.
	// Protect this module from accidental deletion. If set, attempts to delete this module will fail. Defaults to `false`.
	ProtectFromDeletion *bool `json:"protectFromDeletion,omitempty" tf:"protect_from_deletion,omitempty"`

	// (Boolean) Make this module publicly accessible. Can only be set at creation time. Defaults to false.
	// Make this module publicly accessible. Can only be set at creation time. Defaults to `false`.
	Public *bool `json:"public,omitempty" tf:"public,omitempty"`

	// way VCS integration using a raw Git repository link (see below for nested schema)
	// One-way VCS integration using a raw Git repository link
	RawGit []RawGitObservation `json:"rawGit,omitempty" tf:"raw_git,omitempty"`

	// (String) Name of the repository, without the owner part
	// Name of the repository, without the owner part
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// (Set of String) List of the accounts (subdomains) which should have access to the Module
	// List of the accounts (subdomains) which should have access to the Module
	// +listType=set
	SharedAccounts []*string `json:"sharedAccounts,omitempty" tf:"shared_accounts,omitempty"`

	// (String) ID (slug) of the space the module is in
	// ID (slug) of the space the module is in
	SpaceID *string `json:"spaceId,omitempty" tf:"space_id,omitempty"`

	// provider-name naming convention. However, if the repository doesn't follow this convention, or you gave the module a custom name, you can provide the provider name here. However, if the repository doesn't follow this convention, or you gave the module a custom name, you can provide the provider name here.
	TerraformProvider *string `json:"terraformProvider,omitempty" tf:"terraform_provider,omitempty"`

	// hosted instance of Spacelift.
	// ID of the worker pool to use. NOTE: worker_pool_id is required when using a self-hosted instance of Spacelift.
	WorkerPoolID *string `json:"workerPoolId,omitempty" tf:"worker_pool_id,omitempty"`

	// (String) Defines the tool that will be used to execute the workflow.
	// Defines the tool that will be used to execute the workflow.
	WorkflowTool *string `json:"workflowTool,omitempty" tf:"workflow_tool,omitempty"`
}

type ModuleParameters struct {

	// (Boolean) Indicates whether this module can manage others. Defaults to false.
	// Indicates whether this module can manage others. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Administrative *bool `json:"administrative,omitempty" tf:"administrative,omitempty"`

	// (Block List, Max: 1) Azure DevOps VCS settings (see below for nested schema)
	// Azure DevOps VCS settings
	// +kubebuilder:validation:Optional
	AzureDevops []AzureDevopsParameters `json:"azureDevops,omitempty" tf:"azure_devops,omitempty"`

	// (Block List, Max: 1) Bitbucket Cloud VCS settings (see below for nested schema)
	// Bitbucket Cloud VCS settings
	// +kubebuilder:validation:Optional
	BitbucketCloud []BitbucketCloudParameters `json:"bitbucketCloud,omitempty" tf:"bitbucket_cloud,omitempty"`

	// (Block List, Max: 1) Bitbucket Datacenter VCS settings (see below for nested schema)
	// Bitbucket Datacenter VCS settings
	// +kubebuilder:validation:Optional
	BitbucketDatacenter []BitbucketDatacenterParameters `json:"bitbucketDatacenter,omitempty" tf:"bitbucket_datacenter,omitempty"`

	// (String) GitHub branch to apply changes to
	// GitHub branch to apply changes to
	// +kubebuilder:validation:Optional
	Branch *string `json:"branch,omitempty" tf:"branch,omitempty"`

	// form module description for users
	// Free-form module description for users
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// (Boolean) Indicates whether local preview versions can be triggered on this Module. Defaults to false.
	// Indicates whether local preview versions can be triggered on this Module. Defaults to `false`.
	// +kubebuilder:validation:Optional
	EnableLocalPreview *bool `json:"enableLocalPreview,omitempty" tf:"enable_local_preview,omitempty"`

	// hosted) VCS settings (see below for nested schema)
	// GitHub Enterprise (self-hosted) VCS settings
	// +kubebuilder:validation:Optional
	GithubEnterprise []GithubEnterpriseParameters `json:"githubEnterprise,omitempty" tf:"github_enterprise,omitempty"`

	// (Block List, Max: 1) GitLab VCS settings (see below for nested schema)
	// GitLab VCS settings
	// +kubebuilder:validation:Optional
	Gitlab []GitlabParameters `json:"gitlab,omitempty" tf:"gitlab,omitempty"`

	// (Set of String)
	// +kubebuilder:validation:Optional
	// +listType=set
	Labels []*string `json:"labels,omitempty" tf:"labels,omitempty"`

	// provider-name naming convention. However, if the repository doesn't follow this convention, or you want to give it a custom name, you can provide it here. However, if the repository doesn't follow this convention, or you want to give it a custom name, you can provide it here.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// (String) Project root is the optional directory relative to the repository root containing the module source code.
	// Project root is the optional directory relative to the repository root containing the module source code.
	// +kubebuilder:validation:Optional
	ProjectRoot *string `json:"projectRoot,omitempty" tf:"project_root,omitempty"`

	// (Boolean) Protect this module from accidental deletion. If set, attempts to delete this module will fail. Defaults to false.
	// Protect this module from accidental deletion. If set, attempts to delete this module will fail. Defaults to `false`.
	// +kubebuilder:validation:Optional
	ProtectFromDeletion *bool `json:"protectFromDeletion,omitempty" tf:"protect_from_deletion,omitempty"`

	// (Boolean) Make this module publicly accessible. Can only be set at creation time. Defaults to false.
	// Make this module publicly accessible. Can only be set at creation time. Defaults to `false`.
	// +kubebuilder:validation:Optional
	Public *bool `json:"public,omitempty" tf:"public,omitempty"`

	// way VCS integration using a raw Git repository link (see below for nested schema)
	// One-way VCS integration using a raw Git repository link
	// +kubebuilder:validation:Optional
	RawGit []RawGitParameters `json:"rawGit,omitempty" tf:"raw_git,omitempty"`

	// (String) Name of the repository, without the owner part
	// Name of the repository, without the owner part
	// +kubebuilder:validation:Optional
	Repository *string `json:"repository,omitempty" tf:"repository,omitempty"`

	// (Set of String) List of the accounts (subdomains) which should have access to the Module
	// List of the accounts (subdomains) which should have access to the Module
	// +kubebuilder:validation:Optional
	// +listType=set
	SharedAccounts []*string `json:"sharedAccounts,omitempty" tf:"shared_accounts,omitempty"`

	// (String) ID (slug) of the space the module is in
	// ID (slug) of the space the module is in
	// +crossplane:generate:reference:type=github.com/aksel-allas-org/provider-spacelift/apis/space/v1alpha1.Space
	// +kubebuilder:validation:Optional
	SpaceID *string `json:"spaceId,omitempty" tf:"space_id,omitempty"`

	// Reference to a Space in space to populate spaceId.
	// +kubebuilder:validation:Optional
	SpaceIDRef *v1.Reference `json:"spaceIdRef,omitempty" tf:"-"`

	// Selector for a Space in space to populate spaceId.
	// +kubebuilder:validation:Optional
	SpaceIDSelector *v1.Selector `json:"spaceIdSelector,omitempty" tf:"-"`

	// provider-name naming convention. However, if the repository doesn't follow this convention, or you gave the module a custom name, you can provide the provider name here. However, if the repository doesn't follow this convention, or you gave the module a custom name, you can provide the provider name here.
	// +kubebuilder:validation:Optional
	TerraformProvider *string `json:"terraformProvider,omitempty" tf:"terraform_provider,omitempty"`

	// hosted instance of Spacelift.
	// ID of the worker pool to use. NOTE: worker_pool_id is required when using a self-hosted instance of Spacelift.
	// +kubebuilder:validation:Optional
	WorkerPoolID *string `json:"workerPoolId,omitempty" tf:"worker_pool_id,omitempty"`

	// (String) Defines the tool that will be used to execute the workflow.
	// Defines the tool that will be used to execute the workflow.
	// +kubebuilder:validation:Optional
	WorkflowTool *string `json:"workflowTool,omitempty" tf:"workflow_tool,omitempty"`
}

type RawGitInitParameters struct {

	// (String) The Bitbucket project containing the repository
	// User-friendly namespace for the repository, this is for cosmetic purposes only
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// (String) HTTPS URL of the Git repository
	// HTTPS URL of the Git repository
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type RawGitObservation struct {

	// (String) The Bitbucket project containing the repository
	// User-friendly namespace for the repository, this is for cosmetic purposes only
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// (String) HTTPS URL of the Git repository
	// HTTPS URL of the Git repository
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type RawGitParameters struct {

	// (String) The Bitbucket project containing the repository
	// User-friendly namespace for the repository, this is for cosmetic purposes only
	// +kubebuilder:validation:Optional
	Namespace *string `json:"namespace" tf:"namespace,omitempty"`

	// (String) HTTPS URL of the Git repository
	// HTTPS URL of the Git repository
	// +kubebuilder:validation:Optional
	URL *string `json:"url" tf:"url,omitempty"`
}

// ModuleSpec defines the desired state of Module
type ModuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ModuleParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ModuleInitParameters `json:"initProvider,omitempty"`
}

// ModuleStatus defines the observed state of Module.
type ModuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ModuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Module is the Schema for the Modules API.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,spacelift}
type Module struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.branch) || (has(self.initProvider) && has(self.initProvider.branch))",message="spec.forProvider.branch is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.repository) || (has(self.initProvider) && has(self.initProvider.repository))",message="spec.forProvider.repository is a required parameter"
	Spec   ModuleSpec   `json:"spec"`
	Status ModuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ModuleList contains a list of Modules
type ModuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Module `json:"items"`
}

// Repository type metadata.
var (
	Module_Kind             = "Module"
	Module_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Module_Kind}.String()
	Module_KindAPIVersion   = Module_Kind + "." + CRDGroupVersion.String()
	Module_GroupVersionKind = CRDGroupVersion.WithKind(Module_Kind)
)

func init() {
	SchemeBuilder.Register(&Module{}, &ModuleList{})
}
