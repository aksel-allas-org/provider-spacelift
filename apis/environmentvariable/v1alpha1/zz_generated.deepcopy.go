//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariable) DeepCopyInto(out *EnvironmentVariable) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariable.
func (in *EnvironmentVariable) DeepCopy() *EnvironmentVariable {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariable)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentVariable) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableInitParameters) DeepCopyInto(out *EnvironmentVariableInitParameters) {
	*out = *in
	if in.ContextID != nil {
		in, out := &in.ContextID, &out.ContextID
		*out = new(string)
		**out = **in
	}
	if in.ContextIDRef != nil {
		in, out := &in.ContextIDRef, &out.ContextIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ContextIDSelector != nil {
		in, out := &in.ContextIDSelector, &out.ContextIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ModuleID != nil {
		in, out := &in.ModuleID, &out.ModuleID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.WriteOnly != nil {
		in, out := &in.WriteOnly, &out.WriteOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableInitParameters.
func (in *EnvironmentVariableInitParameters) DeepCopy() *EnvironmentVariableInitParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableList) DeepCopyInto(out *EnvironmentVariableList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]EnvironmentVariable, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableList.
func (in *EnvironmentVariableList) DeepCopy() *EnvironmentVariableList {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *EnvironmentVariableList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableObservation) DeepCopyInto(out *EnvironmentVariableObservation) {
	*out = *in
	if in.Checksum != nil {
		in, out := &in.Checksum, &out.Checksum
		*out = new(string)
		**out = **in
	}
	if in.ContextID != nil {
		in, out := &in.ContextID, &out.ContextID
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ModuleID != nil {
		in, out := &in.ModuleID, &out.ModuleID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.WriteOnly != nil {
		in, out := &in.WriteOnly, &out.WriteOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableObservation.
func (in *EnvironmentVariableObservation) DeepCopy() *EnvironmentVariableObservation {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableParameters) DeepCopyInto(out *EnvironmentVariableParameters) {
	*out = *in
	if in.ContextID != nil {
		in, out := &in.ContextID, &out.ContextID
		*out = new(string)
		**out = **in
	}
	if in.ContextIDRef != nil {
		in, out := &in.ContextIDRef, &out.ContextIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ContextIDSelector != nil {
		in, out := &in.ContextIDSelector, &out.ContextIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ModuleID != nil {
		in, out := &in.ModuleID, &out.ModuleID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.StackID != nil {
		in, out := &in.StackID, &out.StackID
		*out = new(string)
		**out = **in
	}
	if in.ValueSecretRef != nil {
		in, out := &in.ValueSecretRef, &out.ValueSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.WriteOnly != nil {
		in, out := &in.WriteOnly, &out.WriteOnly
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableParameters.
func (in *EnvironmentVariableParameters) DeepCopy() *EnvironmentVariableParameters {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableSpec) DeepCopyInto(out *EnvironmentVariableSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableSpec.
func (in *EnvironmentVariableSpec) DeepCopy() *EnvironmentVariableSpec {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *EnvironmentVariableStatus) DeepCopyInto(out *EnvironmentVariableStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new EnvironmentVariableStatus.
func (in *EnvironmentVariableStatus) DeepCopy() *EnvironmentVariableStatus {
	if in == nil {
		return nil
	}
	out := new(EnvironmentVariableStatus)
	in.DeepCopyInto(out)
	return out
}
